Starting from a fresh Ubuntu 12.04 LTS instance

Bring it up to date:
apt-get update
apt-get dist-upgrade

Useful tools:
apt-get install unzip
apt-get install zip
sudo apt-get install apt-show-versions


Oracle JDK 7:

apt-get install python-software-properties
(above adds the add-apt-repository command)
add-apt-repository ppa:webupd8team/java
(to install a repo that has oracle-java7-installer)
apt-get update
(to get updates from the new repo)
apt-get install oracle-java7-installer
(to actually install it)

nano /etc/profile
	add the lines
	export JAVA_HOME=/usr/lib/jvm/java-7-oracle

reboot

Tomcat 7

sudo apt-get install tomcat7


Groovy / Grails:

apt-get install groovy

wget http://dist.springframework.org.s3.amazonaws.com/release/GRAILS/grails-2.3.6.zip

unzip grails-2.3.6.zip

mv grails-2.3.6 /usr/share/grails

Add the following to .profile

JAVA_HOME=/usr/lib/jvm/java-7-oracle
export GRAILS_HOME=/usr/share/grails
PATH=$PATH:/usr/share/grails/bin
export PATH


Oracle XE 11g
--------------

Download the rpm zip (need account)


Using instructions here
http://ubuntuserverguide.com/2012/06/how-to-install-oracle-database-express-edition-11gr2-on-ubuntu-server-12-04.html

	Check swap:
cat /proc/meminfo | grep -i swap
(gee look, no swap!)

	Login as root:
sudo -i

	Create swap file on /home directory with following commands:

dd if=/dev/zero of=/home/swapfile bs=1024 count=1048576
mkswap /home/swapfile
swapon /home/swapfile
swapon -a

	Create a backup of the original “fstab” file and add the new swap file:

cp /etc/fstab /etc/fstab.backup_`date +%N`
echo '/home/swapfile swap swap defaults 0 0' >> /etc/fstab

	Logout from root and verify the new swap space:

exit
swapon -s


sudo apt-get install alien libaio1

unzip oracle-xe-11.2.0-1.0.x86_64.rpm.zip

cd Disk1/

sudo alien --to-deb --scripts oracle-xe-11.2.0-1.0.x86_64.rpm
	(this takes a while...)

sudo ln -s /usr/bin/awk /bin/awk
sudo mkdir /var/lock/subsys


Login as root:

sudo -i
Copy and paste the following Script directly into the terminal to create a file chkconfig:

cat > /sbin/chkconfig <<-EOF
#!/bin/bash
# Oracle 11gR2 XE installer chkconfig, Only run once.
echo "Simulating /sbin/chkconfig..."
if [[ ! \`tail -n1 /etc/init.d/oracle-xe | grep INIT\` ]]; then
cat >> /etc/init.d/oracle-xe <<-EOM
#
### BEGIN INIT INFO
# Provides: OracleXE
# Required-Start: \\\$remote_fs \\\$syslog
# Required-Stop: \\\$remote_fs \\\$syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Oracle 11g Express Edition
### END INIT INFO
EOM
fi
update-rc.d oracle-xe defaults 80 01
EOF
Logout form root:

exit
Set the file /sbin/chkconfig executable :

sudo chmod 755 /sbin/chkconfig


sudo dpkg -i oracle-xe_11.2.0-2_amd64.deb

At this point tried the /etc/init.d/oracle-xe configure step and it failed...following a tip in the comments, went to this page

http://www.len.ro/work/oracle-11g-release-2-xe-on-ubuntu-12-04/

and followed additional instructions...

rm /dev/shm
mkdir /dev/shm
mount -t tmpfs shmfs -o size=2048m /dev/shm
sysctl kernel.shmmax=1073741824

nano /etc/sysctl.conf
 (add that same sysctl kernel.shmmax=1073741824 line)


(also because the first configure attempt failed, subsequent attempts yeileded Port 1521 appears to be in use by another application. So I had to ps -ef | grep oracle and kill the tnslsnr process, before running:)

(at this point returned to the original instructions)


/etc/init.d/oracle-xe configure

(entered 8181 for port for Oracle Application Express
1521 (default) for database listener

bobisadog for sys and system accounts

start on boot: y


passwd oracle
v!FIA*-qWKsVBlwerf0jH
(same as postgres on other digo instances)


su - oracle
Copy the default account skeleton files and add the Oracle env script to .profile:

cp /etc/skel/.bash_logout ./
cp /etc/skel/.bashrc ./
cp /etc/skel/.profile ./
echo "" >>./.profile
echo '. /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh' >>./.profile
Need exit and su again to get these profile changes...

exit
su - oracle

  sqlplus / as sysdba

at SQL> prompt

	EXEC DBMS_XDB.SETLISTENERLOCALACCESS(FALSE);
	exit

At this point it seems to be installed and running!

service oracle-xe status

outputs:

LSNRCTL for Linux: Version 11.2.0.2.0 - Production on 25-FEB-2014 18:31:40

Copyright (c) 1991, 2011, Oracle.  All rights reserved.

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC_FOR_XE)))
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR for Linux: Version 11.2.0.2.0 - Production
Start Date                25-FEB-2014 17:59:31
Uptime                    0 days 0 hr. 32 min. 8 sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Default Service           XE
Listener Parameter File   /u01/app/oracle/product/11.2.0/xe/network/admin/listener.ora
Listener Log File         /u01/app/oracle/diag/tnslsnr/BEMT-QA/listener/alert/log.xml
Listening Endpoints Summary...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC_FOR_XE)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=localhost)(PORT=1521)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=localhost)(PORT=8181))(Presentation=HTTP)(Session=RAW))
Services Summary...
Service "PLSExtProc" has 1 instance(s).
  Instance "PLSExtProc", status UNKNOWN, has 1 handler(s) for this service...
Service "XE" has 1 instance(s).
  Instance "XE", status READY, has 1 handler(s) for this service...
Service "XEXDB" has 1 instance(s).
  Instance "XE", status READY, has 1 handler(s) for this service...
The command completed successfully

--------------------------
However got some oracle errors (ORA-01034: ORACLE not available and 
ORA-27101: shared memory realm does not exist)

so returned to second page and made changes to /etc/init.d/oracle-xe:
change the AWK path (from /bin/awk to  /usr/bin/awk)
change /var/lock/subsys to  /var/lock
add these lines (around line 555....startup section):

if [ -L /dev/shm ]; then
    rm -rf /dev/shm
    mkdir /dev/shm
    mount -t tmpfs shmfs -o size=2048m /dev/shm
fi





-----------------
Setting up Tomcat 

service tomcat7 stop
sudo cp tomcat7 /etc/default

(To use port 80; authbind:

used instructions from here: http://java.dzone.com/articles/running-tomcat-port-80-user)

sudo touch /etc/authbind/byport/80
 sudo chmod 500 /etc/authbind/byport/80
sudo chown tomcat7 /etc/authbind/byport/80

(set AUTHBIND=yes in tomcat7 startup script or copy one that already has it)
(the exec authbind bit in the instruction can be skipped, because of the above presumably)
(set to use port 80 in conf/server.xml)


for oracle. Copy ojdbc6.jar to /usr/share/tomcat7/lib


-------------------------------
Test Grails


type grails
type quit
to test:
grails create-app wpdemo
cd wpdemo
grails run-app

service tomcat7 stop
cd ~/grails_apps/bemt_grails_app
grails upgrade
grails test run-app


--------------------
setting up a db on oracle

Download and Install  Oracle Sql Developer (its a java app...if you get the "other" version you can run it just using the scripts that come with it, on my
linux box

./sqldeveloper.sh

but I had to mark it executable first.

Add connection to
107.170.59.99
user: system
ps: bobisadog
sid: xe (the default installed)

--------------------------

stop tomcat

build war 
grails test war

cp target/provia-R3-20140228.war /var/lib/tomcat7/webapps/provia.war